<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
        <linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
                <stop stop-color="#eeeeee" offset="5%" />
                <stop stop-color="#eeeeb0" offset="95%" />
        </linearGradient>
</defs>
<style type="text/css">
        text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
        #search, #ignorecase { opacity:0.1; cursor:pointer; }
        #search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
        #subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
        #title { text-anchor:middle; font-size:17px}
        #unzoom { cursor:pointer; }
        #frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
        .hide { display:none; }
        .parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
        "use strict";
        var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
        function init(evt) {
                details = document.getElementById("details").firstChild;
                searchbtn = document.getElementById("search");
                ignorecaseBtn = document.getElementById("ignorecase");
                unzoombtn = document.getElementById("unzoom");
                matchedtxt = document.getElementById("matched");
                svg = document.getElementsByTagName("svg")[0];
                searching = 0;
                currentSearchTerm = null;

                // use GET parameters to restore a flamegraphs state.
                var params = get_params();
                if (params.x && params.y)
                        zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
        }

        // event listeners
        window.addEventListener("click", function(e) {
                var target = find_group(e.target);
                if (target) {
                        if (target.nodeName == "a") {
                                if (e.ctrlKey === false) return;
                                e.preventDefault();
                        }
                        if (target.classList.contains("parent")) unzoom(true);
                        zoom(target);
                        if (!document.querySelector('.parent')) {
                                // we have basically done a clearzoom so clear the url
                                var params = get_params();
                                if (params.x) delete params.x;
                                if (params.y) delete params.y;
                                history.replaceState(null, null, parse_params(params));
                                unzoombtn.classList.add("hide");
                                return;
                        }

                        // set parameters for zoom state
                        var el = target.querySelector("rect");
                        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
                                var params = get_params()
                                params.x = el.attributes._orig_x.value;
                                params.y = el.attributes.y.value;
                                history.replaceState(null, null, parse_params(params));
                        }
                }
                else if (e.target.id == "unzoom") clearzoom();
                else if (e.target.id == "search") search_prompt();
                else if (e.target.id == "ignorecase") toggle_ignorecase();
        }, false)

        // mouse-over for info
        // show
        window.addEventListener("mouseover", function(e) {
                var target = find_group(e.target);
                if (target) details.nodeValue = "Function: " + g_to_text(target);
        }, false)

        // clear
        window.addEventListener("mouseout", function(e) {
                var target = find_group(e.target);
                if (target) details.nodeValue = ' ';
        }, false)

        // ctrl-F for search
        // ctrl-I to toggle case-sensitive search
        window.addEventListener("keydown",function (e) {
                if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
                        e.preventDefault();
                        search_prompt();
                }
                else if (e.ctrlKey && e.keyCode === 73) {
                        e.preventDefault();
                        toggle_ignorecase();
                }
        }, false)

        // functions
        function get_params() {
                var params = {};
                var paramsarr = window.location.search.substr(1).split('&');
                for (var i = 0; i < paramsarr.length; ++i) {
                        var tmp = paramsarr[i].split("=");
                        if (!tmp[0] || !tmp[1]) continue;
                        params[tmp[0]]  = decodeURIComponent(tmp[1]);
                }
                return params;
        }
        function parse_params(params) {
                var uri = "?";
                for (var key in params) {
                        uri += key + '=' + encodeURIComponent(params[key]) + '&';
                }
                if (uri.slice(-1) == "&")
                        uri = uri.substring(0, uri.length - 1);
                if (uri == '?')
                        uri = window.location.href.split('?')[0];
                return uri;
        }
        function find_child(node, selector) {
                var children = node.querySelectorAll(selector);
                if (children.length) return children[0];
        }
        function find_group(node) {
                var parent = node.parentElement;
                if (!parent) return;
                if (parent.id == "frames") return node;
                return find_group(parent);
        }
        function orig_save(e, attr, val) {
                if (e.attributes["_orig_" + attr] != undefined) return;
                if (e.attributes[attr] == undefined) return;
                if (val == undefined) val = e.attributes[attr].value;
                e.setAttribute("_orig_" + attr, val);
        }
        function orig_load(e, attr) {
                if (e.attributes["_orig_"+attr] == undefined) return;
                e.attributes[attr].value = e.attributes["_orig_" + attr].value;
                e.removeAttribute("_orig_"+attr);
        }
        function g_to_text(e) {
                var text = find_child(e, "title").firstChild.nodeValue;
                return (text)
        }
        function g_to_func(e) {
                var func = g_to_text(e);
                // if there's any manipulation we want to do to the function
                // name before it's searched, do it here before returning.
                return (func);
        }
        function update_text(e) {
                var r = find_child(e, "rect");
                var t = find_child(e, "text");
                var w = parseFloat(r.attributes.width.value) -3;
                var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
                t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

                // Smaller than this size won't fit anything
                if (w < 2 * 12 * 0.59) {
                        t.textContent = "";
                        return;
                }

                t.textContent = txt;
                var sl = t.getSubStringLength(0, txt.length);
                // check if only whitespace or if we can fit the entire string into width w
                if (/^ *$/.test(txt) || sl < w)
                        return;

                // this isn't perfect, but gives a good starting point
                // and avoids calling getSubStringLength too often
                var start = Math.floor((w/sl) * txt.length);
                for (var x = start; x > 0; x = x-2) {
                        if (t.getSubStringLength(0, x + 2) <= w) {
                                t.textContent = txt.substring(0, x) + "..";
                                return;
                        }
                }
                t.textContent = "";
        }

        // zoom
        function zoom_reset(e) {
                if (e.attributes != undefined) {
                        orig_load(e, "x");
                        orig_load(e, "width");
                }
                if (e.childNodes == undefined) return;
                for (var i = 0, c = e.childNodes; i < c.length; i++) {
                        zoom_reset(c[i]);
                }
        }
        function zoom_child(e, x, ratio) {
                if (e.attributes != undefined) {
                        if (e.attributes.x != undefined) {
                                orig_save(e, "x");
                                e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
                                if (e.tagName == "text")
                                        e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
                        }
                        if (e.attributes.width != undefined) {
                                orig_save(e, "width");
                                e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
                        }
                }

                if (e.childNodes == undefined) return;
                for (var i = 0, c = e.childNodes; i < c.length; i++) {
                        zoom_child(c[i], x - 10, ratio);
                }
        }
        function zoom_parent(e) {
                if (e.attributes) {
                        if (e.attributes.x != undefined) {
                                orig_save(e, "x");
                                e.attributes.x.value = 10;
                        }
                        if (e.attributes.width != undefined) {
                                orig_save(e, "width");
                                e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
                        }
                }
                if (e.childNodes == undefined) return;
                for (var i = 0, c = e.childNodes; i < c.length; i++) {
                        zoom_parent(c[i]);
                }
        }
        function zoom(node) {
                var attr = find_child(node, "rect").attributes;
                var width = parseFloat(attr.width.value);
                var xmin = parseFloat(attr.x.value);
                var xmax = parseFloat(xmin + width);
                var ymin = parseFloat(attr.y.value);
                var ratio = (svg.width.baseVal.value - 2 * 10) / width;

                // XXX: Workaround for JavaScript float issues (fix me)
                var fudge = 0.0001;

                unzoombtn.classList.remove("hide");

                var el = document.getElementById("frames").children;
                for (var i = 0; i < el.length; i++) {
                        var e = el[i];
                        var a = find_child(e, "rect").attributes;
                        var ex = parseFloat(a.x.value);
                        var ew = parseFloat(a.width.value);
                        var upstack;
                        // Is it an ancestor
                        if (0 == 0) {
                                upstack = parseFloat(a.y.value) > ymin;
                        } else {
                                upstack = parseFloat(a.y.value) < ymin;
                        }
                        if (upstack) {
                                // Direct ancestor
                                if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                                        e.classList.add("parent");
                                        zoom_parent(e);
                                        update_text(e);
                                }
                                // not in current path
                                else
                                        e.classList.add("hide");
                        }
                        // Children maybe
                        else {
                                // no common path
                                if (ex < xmin || ex + fudge >= xmax) {
                                        e.classList.add("hide");
                                }
                                else {
                                        zoom_child(e, xmin, ratio);
                                        update_text(e);
                                }
                        }
                }
                search();
        }
        function unzoom(dont_update_text) {
                unzoombtn.classList.add("hide");
                var el = document.getElementById("frames").children;
                for(var i = 0; i < el.length; i++) {
                        el[i].classList.remove("parent");
                        el[i].classList.remove("hide");
                        zoom_reset(el[i]);
                        if(!dont_update_text) update_text(el[i]);
                }
                search();
        }
        function clearzoom() {
                unzoom();

                // remove zoom state
                var params = get_params();
                if (params.x) delete params.x;
                if (params.y) delete params.y;
                history.replaceState(null, null, parse_params(params));
        }

        // search
        function toggle_ignorecase() {
                ignorecase = !ignorecase;
                if (ignorecase) {
                        ignorecaseBtn.classList.add("show");
                } else {
                        ignorecaseBtn.classList.remove("show");
                }
                reset_search();
                search();
        }
        function reset_search() {
                var el = document.querySelectorAll("#frames rect");
                for (var i = 0; i < el.length; i++) {
                        orig_load(el[i], "fill")
                }
                var params = get_params();
                delete params.s;
                history.replaceState(null, null, parse_params(params));
        }
        function search_prompt() {
                if (!searching) {
                        var term = prompt("Enter a search term (regexp " +
                            "allowed, eg: ^ext4_)"
                            + (ignorecase ? ", ignoring case" : "")
                            + "\nPress Ctrl-i to toggle case sensitivity", "");
                        if (term != null) search(term);
                } else {
                        reset_search();
                        searching = 0;
                        currentSearchTerm = null;
                        searchbtn.classList.remove("show");
                        searchbtn.firstChild.nodeValue = "Search"
                        matchedtxt.classList.add("hide");
                        matchedtxt.firstChild.nodeValue = ""
                }
        }
        function search(term) {
                if (term) currentSearchTerm = term;

                var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
                var el = document.getElementById("frames").children;
                var matches = new Object();
                var maxwidth = 0;
                for (var i = 0; i < el.length; i++) {
                        var e = el[i];
                        var func = g_to_func(e);
                        var rect = find_child(e, "rect");
                        if (func == null || rect == null)
                                continue;

                        // Save max width. Only works as we have a root frame
                        var w = parseFloat(rect.attributes.width.value);
                        if (w > maxwidth)
                                maxwidth = w;

                        if (func.match(re)) {
                                // highlight
                                var x = parseFloat(rect.attributes.x.value);
                                orig_save(rect, "fill");
                                rect.attributes.fill.value = "rgb(230,0,230)";

                                // remember matches
                                if (matches[x] == undefined) {
                                        matches[x] = w;
                                } else {
                                        if (w > matches[x]) {
                                                // overwrite with parent
                                                matches[x] = w;
                                        }
                                }
                                searching = 1;
                        }
                }
                if (!searching)
                        return;
                var params = get_params();
                params.s = currentSearchTerm;
                history.replaceState(null, null, parse_params(params));

                searchbtn.classList.add("show");
                searchbtn.firstChild.nodeValue = "Reset Search";

                // calculate percent matched, excluding vertical overlap
                var count = 0;
                var lastx = -1;
                var lastw = 0;
                var keys = Array();
                for (k in matches) {
                        if (matches.hasOwnProperty(k))
                                keys.push(k);
                }
                // sort the matched frames by their x location
                // ascending, then width descending
                keys.sort(function(a, b){
                        return a - b;
                });
                // Step through frames saving only the biggest bottom-up frames
                // thanks to the sort order. This relies on the tree property
                // where children are always smaller than their parents.
                var fudge = 0.0001;     // JavaScript floating point
                for (var k in keys) {
                        var x = parseFloat(keys[k]);
                        var w = matches[keys[k]];
                        if (x >= lastx + lastw - fudge) {
                                count += w;
                                lastx = x;
                                lastw = w;
                        }
                }
                // display matched percent
                matchedtxt.classList.remove("hide");
                var pct = 100 * count / maxwidth;
                if (pct != 100) pct = pct.toFixed(1)
                matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
        }
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="390.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="373" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="373" > </text>
<g id="frames">
<g >
<title>post_alloc_hook (36,308,880 samples, 0.02%)</title><rect x="1187.1" y="149" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1190.12" y="159.5" ></text>
</g>
<g >
<title>__schedule (26,117,754 samples, 0.01%)</title><rect x="1016.2" y="197" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1019.21" y="207.5" ></text>
</g>
<g >
<title>try_to_migrate_one (67,061,222 samples, 0.03%)</title><rect x="1039.1" y="149" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1042.11" y="159.5" ></text>
</g>
<g >
<title>matmul._omp_fn.0 (943,174,925 samples, 0.41%)</title><rect x="1026.6" y="293" width="4.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1029.59" y="303.5" ></text>
</g>
<g >
<title>rebalance_domains (28,919,716 samples, 0.01%)</title><rect x="973.9" y="181" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="976.88" y="191.5" ></text>
</g>
<g >
<title>schedule (998,728,915 samples, 0.43%)</title><rect x="1016.4" y="197" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1019.39" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (129,251,482 samples, 0.06%)</title><rect x="1025.5" y="261" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1028.55" y="271.5" ></text>
</g>
<g >
<title>forward (55,820,539 samples, 0.02%)</title><rect x="1039.6" y="309" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1042.56" y="319.5" ></text>
</g>
<g >
<title>rmap_walk_anon (67,061,222 samples, 0.03%)</title><rect x="1039.1" y="165" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1042.11" y="175.5" ></text>
</g>
<g >
<title>do_work_pending (19,714,076 samples, 0.01%)</title><rect x="971.1" y="261" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="974.10" y="271.5" ></text>
</g>
<g >
<title>migrate_pages (56,792,127 samples, 0.02%)</title><rect x="1039.9" y="181" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1042.88" y="191.5" ></text>
</g>
<g >
<title>do_work_pending (55,611,279 samples, 0.02%)</title><rect x="1014.0" y="261" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1016.95" y="271.5" ></text>
</g>
<g >
<title>kernel_clone (25,596,481 samples, 0.01%)</title><rect x="1024.0" y="181" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1027.02" y="191.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (113,423,273 samples, 0.05%)</title><rect x="1187.5" y="229" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1190.46" y="239.5" ></text>
</g>
<g >
<title>irq_exit (23,749,907 samples, 0.01%)</title><rect x="1014.3" y="245" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1017.26" y="255.5" ></text>
</g>
<g >
<title>ret_from_exception (121,917,243 samples, 0.05%)</title><rect x="1030.7" y="261" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1033.68" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (305,121,029 samples, 0.13%)</title><rect x="1185.9" y="245" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1188.89" y="255.5" ></text>
</g>
<g >
<title>[unknown] (1,735,390,372 samples, 0.75%)</title><rect x="1023.9" y="309" width="8.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1026.93" y="319.5" ></text>
</g>
<g >
<title>resume_userspace_slow (55,611,279 samples, 0.02%)</title><rect x="1014.0" y="277" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1016.95" y="287.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (25,493,204 samples, 0.01%)</title><rect x="1186.5" y="213" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1189.47" y="223.5" ></text>
</g>
<g >
<title>copy_process (25,124,122 samples, 0.01%)</title><rect x="1024.0" y="165" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1027.03" y="175.5" ></text>
</g>
<g >
<title>__futex_unqueue (63,097,900 samples, 0.03%)</title><rect x="1022.8" y="197" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1025.84" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (266,840,098 samples, 0.11%)</title><rect x="1186.0" y="229" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1188.99" y="239.5" ></text>
</g>
<g >
<title>try_to_migrate_one (52,635,214 samples, 0.02%)</title><rect x="1039.9" y="133" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1042.90" y="143.5" ></text>
</g>
<g >
<title>__handle_mm_fault (69,142,224 samples, 0.03%)</title><rect x="1030.9" y="213" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1033.88" y="223.5" ></text>
</g>
<g >
<title>get_signal (55,213,799 samples, 0.02%)</title><rect x="1014.0" y="245" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1016.95" y="255.5" ></text>
</g>
<g >
<title>generic_handle_arch_irq (23,749,907 samples, 0.01%)</title><rect x="1014.3" y="261" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1017.26" y="271.5" ></text>
</g>
<g >
<title>matmul._omp_fn.0 (63,135,676 samples, 0.03%)</title><rect x="975.0" y="293" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="977.95" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (84,062,610 samples, 0.04%)</title><rect x="1039.0" y="229" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1042.03" y="239.5" ></text>
</g>
<g >
<title>skip_context_tracking (26,917,822 samples, 0.01%)</title><rect x="1023.7" y="277" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1026.70" y="287.5" ></text>
</g>
<g >
<title>flush_tlb_page (66,216,550 samples, 0.03%)</title><rect x="1039.1" y="117" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1042.11" y="127.5" ></text>
</g>
<g >
<title>__futex_queue (104,601,551 samples, 0.04%)</title><rect x="1015.7" y="197" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1018.68" y="207.5" ></text>
</g>
<g >
<title>create_thread (41,578,078 samples, 0.02%)</title><rect x="1023.9" y="261" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1026.94" y="271.5" ></text>
</g>
<g >
<title>plist_add (86,040,423 samples, 0.04%)</title><rect x="1015.8" y="181" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1018.78" y="191.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (199,817,928,972 samples, 85.92%)</title><rect x="10.0" y="309" width="1013.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="13.03" y="319.5" >[libgomp.so.1.0.0]</text>
</g>
<g >
<title>$x (52,635,214 samples, 0.02%)</title><rect x="1039.9" y="85" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1042.90" y="95.5" ></text>
</g>
<g >
<title>GOMP_parallel (52,332,676 samples, 0.02%)</title><rect x="1023.9" y="293" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1026.93" y="303.5" ></text>
</g>
<g >
<title>sample_topp (45,215,125 samples, 0.02%)</title><rect x="1189.7" y="309" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1192.67" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (56,792,127 samples, 0.02%)</title><rect x="1039.9" y="229" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1042.88" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (74,107,798 samples, 0.03%)</title><rect x="1030.9" y="229" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1033.88" y="239.5" ></text>
</g>
<g >
<title>syscall (179,533,588 samples, 0.08%)</title><rect x="1025.4" y="277" width="0.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1028.40" y="287.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (190,037,057,643 samples, 81.72%)</title><rect x="10.2" y="293" width="964.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="13.18" y="303.5" >[libgomp.so.1.0.0]</text>
</g>
<g >
<title>msort_with_tmp.part.0 (22,398,653 samples, 0.01%)</title><rect x="1033.0" y="213" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1035.97" y="223.5" ></text>
</g>
<g >
<title>irq_exit (635,989,967 samples, 0.27%)</title><rect x="971.2" y="245" width="3.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="974.22" y="255.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (43,149,640 samples, 0.02%)</title><rect x="1186.2" y="197" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1189.20" y="207.5" ></text>
</g>
<g >
<title>generic_handle_arch_irq (113,423,273 samples, 0.05%)</title><rect x="1187.5" y="261" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1190.46" y="271.5" ></text>
</g>
<g >
<title>forward._omp_fn.0 (1,163,770,221 samples, 0.50%)</title><rect x="1033.6" y="293" width="5.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1036.58" y="303.5" ></text>
</g>
<g >
<title>migrate_misplaced_page (56,792,127 samples, 0.02%)</title><rect x="1039.9" y="197" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1042.88" y="207.5" ></text>
</g>
<g >
<title>ptep_clear_flush (52,635,214 samples, 0.02%)</title><rect x="1039.9" y="117" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1042.90" y="127.5" ></text>
</g>
<g >
<title>matmul._omp_fn.0 (29,130,553,954 samples, 12.53%)</title><rect x="1041.0" y="309" width="147.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1043.95" y="319.5" >matmul._omp_fn.0</text>
</g>
<g >
<title>migrate_pages (74,581,268 samples, 0.03%)</title><rect x="1039.1" y="197" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1042.07" y="207.5" ></text>
</g>
<g >
<title>__folio_alloc (19,756,216 samples, 0.01%)</title><rect x="1031.1" y="181" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1034.13" y="191.5" ></text>
</g>
<g >
<title>resume_userspace_slow (19,714,076 samples, 0.01%)</title><rect x="971.1" y="277" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="974.10" y="287.5" ></text>
</g>
<g >
<title>page_counter_uncharge (35,121,211 samples, 0.02%)</title><rect x="1186.2" y="165" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1189.22" y="175.5" ></text>
</g>
<g >
<title>forward (37,490,662 samples, 0.02%)</title><rect x="1033.2" y="309" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1036.20" y="319.5" ></text>
</g>
<g >
<title>acct_collect (22,811,983 samples, 0.01%)</title><rect x="1014.1" y="197" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1017.09" y="207.5" ></text>
</g>
<g >
<title>run_rebalance_domains (107,609,250 samples, 0.05%)</title><rect x="973.9" y="197" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="976.86" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1,851,732,671 samples, 0.80%)</title><rect x="1004.3" y="277" width="9.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1007.28" y="287.5" ></text>
</g>
<g >
<title>sys_futex (1,815,018,235 samples, 0.78%)</title><rect x="1014.5" y="261" width="9.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1017.47" y="271.5" ></text>
</g>
<g >
<title>__folio_alloc (60,587,418 samples, 0.03%)</title><rect x="1187.0" y="197" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1190.04" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (269,451,501 samples, 0.12%)</title><rect x="969.7" y="277" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="972.70" y="287.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (26,689,230 samples, 0.01%)</title><rect x="1033.0" y="229" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1035.95" y="239.5" ></text>
</g>
<g >
<title>__list_del_entry_valid (32,934,153 samples, 0.01%)</title><rect x="1023.0" y="165" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1026.00" y="175.5" ></text>
</g>
<g >
<title>__schedule (983,563,836 samples, 0.42%)</title><rect x="1016.5" y="181" width="4.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1019.46" y="191.5" ></text>
</g>
<g >
<title>flush_tlb_page (52,635,214 samples, 0.02%)</title><rect x="1039.9" y="101" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1042.90" y="111.5" ></text>
</g>
<g >
<title>rmap_walk_anon (52,635,214 samples, 0.02%)</title><rect x="1039.9" y="149" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1042.90" y="159.5" ></text>
</g>
<g >
<title>do_page_fault (114,682,773 samples, 0.05%)</title><rect x="1030.7" y="245" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1033.68" y="255.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (635,989,967 samples, 0.27%)</title><rect x="971.2" y="229" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="974.22" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (292,779,409 samples, 0.13%)</title><rect x="1037.4" y="277" width="1.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1040.44" y="287.5" ></text>
</g>
<g >
<title>__sbi_rfence_v02_call.isra.0 (52,097,722 samples, 0.02%)</title><rect x="1039.9" y="37" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1042.90" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2,336,048,389 samples, 1.00%)</title><rect x="1172.5" y="277" width="11.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1175.52" y="287.5" ></text>
</g>
<g >
<title>generate (115,892,659 samples, 0.05%)</title><rect x="1040.4" y="309" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1043.36" y="319.5" ></text>
</g>
<g >
<title>free (62,998,600 samples, 0.03%)</title><rect x="1039.9" y="293" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1042.85" y="303.5" ></text>
</g>
<g >
<title>ret_from_exception (93,656,519 samples, 0.04%)</title><rect x="1039.0" y="277" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1042.01" y="287.5" ></text>
</g>
<g >
<title>sample.part.0 (173,539,168 samples, 0.07%)</title><rect x="1188.8" y="309" width="0.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1191.79" y="319.5" ></text>
</g>
<g >
<title>do_group_exit (28,632,480 samples, 0.01%)</title><rect x="1014.1" y="229" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1017.09" y="239.5" ></text>
</g>
<g >
<title>futex_wake (236,271,669 samples, 0.10%)</title><rect x="1022.4" y="229" width="1.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1025.41" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (5,631,410,057 samples, 2.42%)</title><rect x="975.6" y="277" width="28.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="978.65" y="287.5" >_r..</text>
</g>
<g >
<title>$x (66,216,550 samples, 0.03%)</title><rect x="1039.1" y="101" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1042.11" y="111.5" ></text>
</g>
<g >
<title>__clone (41,569,188 samples, 0.02%)</title><rect x="1023.9" y="245" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1026.94" y="255.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (30,050,548 samples, 0.01%)</title><rect x="1033.0" y="245" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1035.95" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (439,373,103 samples, 0.19%)</title><rect x="1028.4" y="261" width="2.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1031.37" y="271.5" ></text>
</g>
<g >
<title>try_to_migrate (67,061,222 samples, 0.03%)</title><rect x="1039.1" y="181" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1042.11" y="191.5" ></text>
</g>
<g >
<title>all (232,553,377,140 samples, 100%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (84,980,348 samples, 0.04%)</title><rect x="1039.0" y="245" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1042.02" y="255.5" ></text>
</g>
<g >
<title>__do_sys_clone (25,596,481 samples, 0.01%)</title><rect x="1024.0" y="197" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1027.02" y="207.5" ></text>
</g>
<g >
<title>get_page_from_freelist (46,627,944 samples, 0.02%)</title><rect x="1187.1" y="165" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1190.07" y="175.5" ></text>
</g>
<g >
<title>sample.part.0 (265,134,418 samples, 0.11%)</title><rect x="1031.4" y="293" width="1.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1034.39" y="303.5" ></text>
</g>
<g >
<title>ret_from_syscall (25,596,481 samples, 0.01%)</title><rect x="1024.0" y="229" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1027.02" y="239.5" ></text>
</g>
<g >
<title>expf (37,597,137 samples, 0.02%)</title><rect x="1033.4" y="293" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1036.39" y="303.5" ></text>
</g>
<g >
<title>expf (36,993,105 samples, 0.02%)</title><rect x="1039.6" y="293" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1042.56" y="303.5" ></text>
</g>
<g >
<title>[unknown] (20,811,978 samples, 0.01%)</title><rect x="1026.3" y="293" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1029.31" y="303.5" ></text>
</g>
<g >
<title>plist_del (34,100,614 samples, 0.01%)</title><rect x="1023.0" y="181" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1025.99" y="191.5" ></text>
</g>
<g >
<title>__alloc_pages (60,134,730 samples, 0.03%)</title><rect x="1187.0" y="181" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1190.04" y="191.5" ></text>
</g>
<g >
<title>wake_q_add_safe (62,859,853 samples, 0.03%)</title><rect x="1023.2" y="213" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1026.19" y="223.5" ></text>
</g>
<g >
<title>__sbi_rfence_v02 (66,216,550 samples, 0.03%)</title><rect x="1039.1" y="69" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1042.11" y="79.5" ></text>
</g>
<g >
<title>migrate_misplaced_page (75,941,765 samples, 0.03%)</title><rect x="1039.1" y="213" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1042.07" y="223.5" ></text>
</g>
<g >
<title>ret_from_exception (638,239,583 samples, 0.27%)</title><rect x="971.2" y="277" width="3.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="974.20" y="287.5" ></text>
</g>
<g >
<title>futex_unqueue (43,989,653 samples, 0.02%)</title><rect x="1015.0" y="213" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1018.01" y="223.5" ></text>
</g>
<g >
<title>sys_clone (25,596,481 samples, 0.01%)</title><rect x="1024.0" y="213" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1027.02" y="223.5" ></text>
</g>
<g >
<title>_int_free (62,998,600 samples, 0.03%)</title><rect x="1039.9" y="277" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1042.85" y="287.5" ></text>
</g>
<g >
<title>futex_wait (1,489,381,689 samples, 0.64%)</title><rect x="1014.8" y="229" width="7.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1017.81" y="239.5" ></text>
</g>
<g >
<title>vma_alloc_folio (22,723,663 samples, 0.01%)</title><rect x="1031.1" y="197" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1034.12" y="207.5" ></text>
</g>
<g >
<title>ret_from_exception (56,792,127 samples, 0.02%)</title><rect x="1039.9" y="261" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1042.88" y="271.5" ></text>
</g>
<g >
<title>do_page_fault (56,792,127 samples, 0.02%)</title><rect x="1039.9" y="245" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1042.88" y="255.5" ></text>
</g>
<g >
<title>__GI___qsort_r (36,296,315 samples, 0.02%)</title><rect x="1032.9" y="293" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1035.94" y="303.5" ></text>
</g>
<g >
<title>sbi_remote_sfence_vma_asid (52,635,214 samples, 0.02%)</title><rect x="1039.9" y="69" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1042.90" y="79.5" ></text>
</g>
<g >
<title>sbi_remote_sfence_vma_asid (66,216,550 samples, 0.03%)</title><rect x="1039.1" y="85" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1042.11" y="95.5" ></text>
</g>
<g >
<title>futex_wake_mark (128,401,425 samples, 0.06%)</title><rect x="1022.5" y="213" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1025.52" y="223.5" ></text>
</g>
<g >
<title>update_blocked_averages (75,202,816 samples, 0.03%)</title><rect x="974.0" y="181" width="0.4" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="977.02" y="191.5" ></text>
</g>
<g >
<title>do_exit (28,632,480 samples, 0.01%)</title><rect x="1014.1" y="213" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1017.09" y="223.5" ></text>
</g>
<g >
<title>__handle_mm_fault (56,792,127 samples, 0.02%)</title><rect x="1039.9" y="213" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1042.88" y="223.5" ></text>
</g>
<g >
<title>sample.part.0 (95,555,120 samples, 0.04%)</title><rect x="1040.5" y="293" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1043.46" y="303.5" ></text>
</g>
<g >
<title>__irqentry_text_start (633,918,198 samples, 0.27%)</title><rect x="971.2" y="213" width="3.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="974.22" y="223.5" ></text>
</g>
<g >
<title>__folio_put (49,871,316 samples, 0.02%)</title><rect x="1186.2" y="213" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1189.20" y="223.5" ></text>
</g>
<g >
<title>generic_handle_arch_irq (635,989,967 samples, 0.27%)</title><rect x="971.2" y="261" width="3.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="974.22" y="271.5" ></text>
</g>
<g >
<title>ret_from_exception (28,898,590 samples, 0.01%)</title><rect x="1014.2" y="277" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1017.24" y="287.5" ></text>
</g>
<g >
<title>sample.part.0 (86,695,106 samples, 0.04%)</title><rect x="1189.2" y="293" width="0.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1192.23" y="303.5" ></text>
</g>
<g >
<title>futex_hash (21,143,306 samples, 0.01%)</title><rect x="1013.8" y="277" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1016.80" y="287.5" ></text>
</g>
<g >
<title>futex_wait_queue (1,225,989,637 samples, 0.53%)</title><rect x="1015.2" y="213" width="6.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1018.24" y="223.5" ></text>
</g>
<g >
<title>irq_exit (113,423,273 samples, 0.05%)</title><rect x="1187.5" y="245" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1190.46" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (86,393,494 samples, 0.04%)</title><rect x="969.3" y="277" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="972.26" y="287.5" ></text>
</g>
<g >
<title>expf (74,404,843 samples, 0.03%)</title><rect x="1188.8" y="293" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1191.79" y="303.5" ></text>
</g>
<g >
<title>try_to_migrate (52,635,214 samples, 0.02%)</title><rect x="1039.9" y="165" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1042.90" y="175.5" ></text>
</g>
<g >
<title>expf (265,134,418 samples, 0.11%)</title><rect x="1031.4" y="277" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1034.39" y="287.5" ></text>
</g>
<g >
<title>__irqentry_text_start (23,749,907 samples, 0.01%)</title><rect x="1014.3" y="213" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1017.26" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (77,548,621 samples, 0.03%)</title><rect x="1184.4" y="277" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1187.38" y="287.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (961,378,163 samples, 0.41%)</title><rect x="1016.6" y="165" width="4.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1019.57" y="175.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (33,421,000 samples, 0.01%)</title><rect x="1032.9" y="261" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1035.95" y="271.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (36,296,315 samples, 0.02%)</title><rect x="1032.9" y="277" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1035.94" y="287.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (46,222,093 samples, 0.02%)</title><rect x="1023.9" y="277" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1026.93" y="287.5" ></text>
</g>
<g >
<title>run_rebalance_domains (23,741,628 samples, 0.01%)</title><rect x="1187.9" y="197" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1190.91" y="207.5" ></text>
</g>
<g >
<title>syscall (9,583,148,496 samples, 4.12%)</title><rect x="975.3" y="293" width="48.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="978.30" y="303.5" >sysc..</text>
</g>
<g >
<title>omp_get_num_threads (100,423,416 samples, 0.04%)</title><rect x="1188.2" y="293" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1191.15" y="303.5" ></text>
</g>
<g >
<title>vma_alloc_folio (65,494,541 samples, 0.03%)</title><rect x="1187.0" y="213" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1190.01" y="223.5" ></text>
</g>
<g >
<title>do_page_fault (88,578,265 samples, 0.04%)</title><rect x="1039.0" y="261" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1042.01" y="271.5" ></text>
</g>
<g >
<title>free_tokenizer (82,073,584 samples, 0.04%)</title><rect x="1039.9" y="309" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1042.85" y="319.5" ></text>
</g>
<g >
<title>do_futex (1,783,931,878 samples, 0.77%)</title><rect x="1014.6" y="245" width="9.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1017.56" y="255.5" ></text>
</g>
<g >
<title>__sbi_rfence_v02_call.isra.0 (66,216,550 samples, 0.03%)</title><rect x="1039.1" y="53" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1042.11" y="63.5" ></text>
</g>
<g >
<title>filemap_map_pages (48,310,617 samples, 0.02%)</title><rect x="1186.7" y="213" width="0.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1189.69" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock (56,076,772 samples, 0.02%)</title><rect x="974.5" y="293" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="977.46" y="303.5" ></text>
</g>
<g >
<title>matmul._omp_fn.0 (29,009,328,010 samples, 12.47%)</title><rect x="1041.0" y="293" width="147.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1043.95" y="303.5" >matmul._omp_fn.0</text>
</g>
<g >
<title>__sbi_rfence_v02 (52,097,722 samples, 0.02%)</title><rect x="1039.9" y="53" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1042.90" y="63.5" ></text>
</g>
<g >
<title>__irqentry_text_start (112,516,520 samples, 0.05%)</title><rect x="1187.5" y="213" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1190.46" y="223.5" ></text>
</g>
<g >
<title>futex_q_lock (115,945,705 samples, 0.05%)</title><rect x="1021.6" y="197" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1024.56" y="207.5" ></text>
</g>
<g >
<title>ptep_clear_flush (66,690,892 samples, 0.03%)</title><rect x="1039.1" y="133" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1042.11" y="143.5" ></text>
</g>
<g >
<title>__list_add_valid (40,357,348 samples, 0.02%)</title><rect x="1016.0" y="165" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1019.01" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_lock (27,982,546 samples, 0.01%)</title><rect x="1025.4" y="261" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1028.41" y="271.5" ></text>
</g>
<g >
<title>down_read (58,428,596 samples, 0.03%)</title><rect x="1185.2" y="245" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1188.21" y="255.5" ></text>
</g>
<g >
<title>ret_from_syscall (1,832,850,495 samples, 0.79%)</title><rect x="1014.4" y="277" width="9.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1017.38" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (65,690,469 samples, 0.03%)</title><rect x="1184.8" y="277" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1187.77" y="287.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (416,954,713 samples, 0.18%)</title><rect x="1024.2" y="293" width="2.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1027.20" y="303.5" ></text>
</g>
<g >
<title>mt_find (75,860,510 samples, 0.03%)</title><rect x="1185.5" y="229" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1188.51" y="239.5" ></text>
</g>
<g >
<title>matmul._omp_fn.0 (929,474,930 samples, 0.40%)</title><rect x="1026.6" y="277" width="4.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1029.59" y="287.5" ></text>
</g>
<g >
<title>run (232,553,364,192 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >run</text>
</g>
<g >
<title>forward._omp_fn.0 (1,216,903,229 samples, 0.52%)</title><rect x="1033.4" y="309" width="6.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1036.39" y="319.5" ></text>
</g>
<g >
<title>forward._omp_fn.0 (25,841,638 samples, 0.01%)</title><rect x="974.8" y="293" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="977.82" y="303.5" ></text>
</g>
<g >
<title>ret_from_exception (584,472,586 samples, 0.25%)</title><rect x="1185.1" y="277" width="3.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1188.14" y="287.5" ></text>
</g>
<g >
<title>get_futex_key (32,957,211 samples, 0.01%)</title><rect x="1022.1" y="197" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1025.15" y="207.5" ></text>
</g>
<g >
<title>encode (41,008,894 samples, 0.02%)</title><rect x="1032.9" y="309" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1035.94" y="319.5" ></text>
</g>
<g >
<title>do_page_fault (457,410,089 samples, 0.20%)</title><rect x="1185.1" y="261" width="2.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1188.14" y="271.5" ></text>
</g>
<g >
<title>uncharge_batch (39,656,023 samples, 0.02%)</title><rect x="1186.2" y="181" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1189.20" y="191.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (23,749,907 samples, 0.01%)</title><rect x="1014.3" y="229" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1017.26" y="239.5" ></text>
</g>
<g >
<title>charge_memcg (21,470,729 samples, 0.01%)</title><rect x="1186.5" y="197" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1189.49" y="207.5" ></text>
</g>
<g >
<title>futex_wait_setup (168,929,063 samples, 0.07%)</title><rect x="1021.5" y="213" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1024.46" y="223.5" ></text>
</g>
<g >
<title>next_uptodate_page (24,777,096 samples, 0.01%)</title><rect x="1186.8" y="197" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1189.80" y="207.5" ></text>
</g>
<g >
<title>find_vma (75,860,510 samples, 0.03%)</title><rect x="1185.5" y="245" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1188.51" y="255.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (236,056,812 samples, 0.10%)</title><rect x="1024.2" y="277" width="1.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1027.20" y="287.5" ></text>
</g>
</g>
</svg>